<%- include('components/header', { title: '设置' }) %>

<div x-data="settingsPage">
  <%- include('components/header/nav-bar') %>

  <main class="max-w-screen-md mx-auto px-4 pt-20">
    <!-- 显示头像 -->
    <div class="flex justify-center mb-6">
      <img :src="avatarUrlRef || '/images/avatar.png'" alt="头像" class="h-20 w-20 rounded-full cursor-pointer"
        @click="onSelectFile">
      <input type="file" x-ref="avatarInput" class="hidden" accept="image/*" @change="onUploadAvatar" />
    </div>

    <div class="divider"></div>

    <h2 class="card-title mb-4">账号设置</h2>

    <!-- 修改密码表单 -->
    <form @submit.prevent="onChangePassword">
      <div class="form-control w-full">
        <label class="label">
          <span class="label-text">当前密码</span>
        </label>
        <input type="password" x-model="oldPasswordRef" class="input input-bordered w-full" required />
      </div>

      <div class="form-control w-full mt-4">
        <label class="label">
          <span class="label-text">新密码</span>
        </label>
        <input type="password" x-model="newPasswordRef" class="input input-bordered w-full" required minlength="8" />
        <label class="label">
          <span class="label-text-alt">至少8个字符</span>
        </label>
      </div>

      <div class="card-actions justify-end mt-6">
        <button type="submit" class="btn btn-primary" :disabled="isSubmittingRef">
          <span x-show="isSubmittingRef" class="loading loading-spinner"></span>
          修改密码
        </button>
      </div>
    </form>

    <div class="divider"></div>

    <!-- 退出登录 -->
    <div class="flex justify-between items-center">
      <div>
        <h3 class="font-bold">退出登录</h3>
        <p class="text-sm text-base-content/70">退出当前账号</p>
      </div>
      <button class="btn btn-error" @click="onLogout" :disabled="isLoggingOutRef">
        <span x-show="isLoggingOutRef" class="loading loading-spinner"></span>
        退出登录
      </button>
    </div>
  </main>
</div>

<%- include('components/common/confirm-modal') %>

<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('settingsPage', () => ({
      oldPasswordRef: '',
      newPasswordRef: '',
      avatarUrlRef: '',
      isSubmittingRef: false,
      isLoggingOutRef: false,
      isUploadingAvatarRef: false,

      init() {
        const user = AV.User.current()
        this.avatarUrlRef = user.get('avatar')?.url() || '/images/avatar.png'
      },

      onSelectFile() {
        this.$refs.avatarInput.click()
      },

      async onChangePassword() {
        this.isSubmittingRef = true
        try {
          const user = AV.User.current()
          // 先验证旧密码
          await AV.User.logIn(user.get('username'), this.oldPasswordRef)
          // 更新密码
          user.setPassword(this.newPasswordRef)
          await user.save()

          window.$toast.success('密码修改成功')
          this.oldPasswordRef = ''
          this.newPasswordRef = ''
        } catch(error) {
          console.error('修改密码失败:', error)
          const message = await LCError.onGetMessage({ error })
          window.$toast.error(message)
        } finally {
          this.isSubmittingRef = false
        }
      },

      async onLogout() {
        // 获取确认弹框组件
        const confirmModal = Alpine.$data(document.querySelector('[x-data="confirmModal"]'))

        confirmModal.onShow({
          title: '退出登录',
          message: '确定要退出登录吗？',
          type: 'danger',
          onConfirm: async () => {
            this.isLoggingOutRef = true
            try {
              await AV.User.logOut()
              window.location.href = '/login'
            } catch(error) {
              console.error('退出登录失败:', error)
              const message = await LCError.onGetMessage({ error })
              window.$toast.error(message)
            } finally {
              this.isLoggingOutRef = false
            }
          }
        })
      },

      async onUploadAvatar(event) {
        const file = event.target.files[0]
        if(!file) {
          window.$toast.error('请选择一个文件')
          return
        }

        this.isUploadingAvatarRef = true
        try {
          // 假设使用 LeanCloud 作为后端服务
          const avatar = new AV.File(file.name, file)
          await avatar.save()
          const user = AV.User.current()
          user.set('avatar', avatar)
          await user.save()

          this.avatarUrlRef = user.get('avatar').url() // 更新页面上显示的头像
          window.$toast.success('头像更新成功')
        } catch(error) {
          console.error('头像上传失败:', error)
          const message = await LCError.onGetMessage({ error })
          window.$toast.error(message)
        } finally {
          this.isUploadingAvatarRef = false
        }
      }
    }))
  })
</script>